class Solution:
    def generate(self,curr_str,Open,Close,ans,num):
        if(Open+Close == 2*n and Open==Close):
            ans.append(curr_str)
            return
        if(Open>n):
            return
        if(Close>Open):
            return
        self.generate(curr_str+"(",Open+1,Close,ans,n)
        self.generate(curr_str+")",Open,Close+1,ans,n)
    def generateParenthesis(self,n):
        curr_str = ""
        ans = []
        Open = 0
        Close = 0
        self.generate(curr_str,Open,Close,ans,n)
        return ans
ob = Solution()
n = 2
print(ob.generateParenthesis(n))
